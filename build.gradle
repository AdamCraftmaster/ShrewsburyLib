buildscript {
    ext.WPI_VER = "2023.1.1"
}

plugins {
    id 'java'
    id 'maven-publish'
    id "edu.wpi.first.GradleRIO" version "${WPI_VER}"

    id "com.diffplug.spotless" version "6.11.0"
}

group 'org.shrewsburyrobotics'
version '2023.1.0-SNAPSHOT'

sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11

configurations {
    jaxDoclet
}

repositories {
    maven {
        url = uri("https://maven.pkg.github.com/Mechanical-Advantage/AdvantageKit")
        credentials {
            username = "Mechanical-Advantage-Bot"
            password = "\u0067\u0068\u0070\u005f\u006e\u0056\u0051\u006a\u0055\u004f\u004c\u0061\u0079\u0066\u006e\u0078\u006e\u0037\u0051\u0049\u0054\u0042\u0032\u004c\u004a\u006d\u0055\u0070\u0073\u0031\u006d\u0037\u004c\u005a\u0030\u0076\u0062\u0070\u0063\u0051"
        }
    }

    mavenCentral()
}

configurations.all {
    exclude group: "edu.wpi.first.wpilibj"
}

sourceSets {
    main {
        java {
            srcDirs "src/main/java"
            srcDirs "build/generated/sources/annotationProcessor/java/main"
        }
    }
}

dependencies {
    implementation wpi.java.deps.wpilib()
    implementation wpi.java.vendor.java()

    nativeDebug wpi.java.deps.wpilibJniDebug(wpi.platforms.desktop)
    nativeDebug wpi.java.vendor.jniDebug(wpi.platforms.desktop)
    simulationDebug wpi.sim.enableDebug()

    implementation "edu.wpi.first.ntcore:ntcore-java:${WPI_VER}"
    implementation "edu.wpi.first.wpiutil:wpiutil-java:${WPI_VER}"

    annotationProcessor "org.littletonrobotics.akit.junction:junction-autolog:2.0.0-beta-1"

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId = 'org.shrewsburyrobotics'
            artifactId = 'shrewsburylib'
            version = "${version}"

            from components.java
        }
    }
}

test {
    useJUnitPlatform()
}

spotless {
    java {
        googleJavaFormat()

        trimTrailingWhitespace()
        endWithNewline()

        removeUnusedImports()
    }
}

javadoc {
    destinationDir = file('docs/')
}

compileJava {
    dependsOn spotlessApply
}

build {
    dependsOn javadoc
}

jar {
    from sourceSets.main.allSource
    duplicatesStrategy(DuplicatesStrategy.EXCLUDE)
}